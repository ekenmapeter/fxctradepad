let selectedCurrency="AUDUSD";let UJValue=0;let UCADValue=0;let UCHFValue=0;let GUValue=0;let GJValue=0;let chart;let profitLossChart;let fetchPromises=[];document.addEventListener("DOMContentLoaded",()=>{initializeChart();initializeProfitLossChart()});const primaryApiKey="VnRxNVlubmV0UXZmVzE0Wjc0X0VFb2l0WHZreWhjeHFHN0RlWk9QalNGRT0";const secondaryApiKeys={openExchangeRates:"fb9ef428f303007b3ddbeea9",exchangeRateAPI:"d6b01146e989780439e36a01",alphaVantage:"Z06TVZQBSZPZEP4I",currencyAPI:"cur_live_bacq0wLkJHHwTImde39q8w34DCnolkHYe4LOUQuB",polygon:"Ad9w2NDk51CcOfmRTM3PELNZCKXOuLCO"};const fallbackValues={USDJPY:109.5,USDCAD:1.25,USDCHF:.92,GBPUSD:1.4,GBPJPY:152};const fetchFunctions={primary:currencyPair=>`https://api.marketdata.app/v1/forex/${currencyPair}?apikey=${primaryApiKey}`,openExchangeRates:currencyPair=>`https://openexchangerates.org/api/latest.json?app_id=${secondaryApiKeys.openExchangeRates}`,exchangeRateAPI:currencyPair=>`https://v6.exchangerate-api.com/v6/${secondaryApiKeys.exchangeRateAPI}/pair/${currencyPair.replace("/","-")}`,alphaVantage:currencyPair=>`https://www.alphavantage.co/query?function=CURRENCY_EXCHANGE_RATE&from_currency=${currencyPair.split("/")[0]}&to_currency=${currencyPair.split("/")[1]}&apikey=${secondaryApiKeys.alphaVantage}`,currencyAPI:currencyPair=>`https://api.currencyapi.com/v3/latest?apikey=${secondaryApiKeys.currencyAPI}&currencies=${currencyPair.split("/")[1]}&base_currency=${currencyPair.split("/")[0]}`,polygon:currencyPair=>`https://api.polygon.io/v1/conversion/${currencyPair.split("/")[0]}/${currencyPair.split("/")[1]}?apiKey=${secondaryApiKeys.polygon}`};function fetchExchangeRate(currencyPair){return new Promise((resolve,reject)=>{const fetchSequence=[fetchFunctions.primary(currencyPair),fetchFunctions.openExchangeRates(currencyPair),fetchFunctions.exchangeRateAPI(currencyPair),fetchFunctions.alphaVantage(currencyPair),fetchFunctions.currencyAPI(currencyPair),fetchFunctions.polygon(currencyPair)];const fallbackValue=fallbackValues[currencyPair.replace("/","")];const tryFetch=index=>{if(index>=fetchSequence.length){alert("All APIs failed. Using fallback value.");resolve(fallbackValue);return}const url=fetchSequence[index];fetch(url).then(response=>response.json()).then(data=>{let rate;if(url.includes("marketdata.app")){rate=data.data&&data.data.rate}else if(url.includes("openexchangerates.org")){rate=data.rates&&data.rates[currencyPair.split("/")[1]]}else if(url.includes("exchangerate-api.com")){rate=data.conversion_rate}else if(url.includes("alphavantage.co")){rate=data["Realtime Currency Exchange Rate"]&&data["Realtime Currency Exchange Rate"]["5. Exchange Rate"]}else if(url.includes("currencyapi.com")){rate=data.data&&data.data[currencyPair.split("/")[1]].value}else if(url.includes("polygon.io")){rate=data.conversion&&data.conversion.rate}if(rate){resolve(parseFloat(rate));console.log(`Fetched value from API: ${rate}`)}else{throw new Error("API returned no conversion rate")}}).catch(error=>{console.error(`Error fetching from API (Attempt ${index+1}):`,error);tryFetch(index+1)})};tryFetch(0)})}function fetchUJValue(){return fetchExchangeRate("USD/JPY").then(rate=>{UJValue=rate})}function fetchUCADValue(){return fetchExchangeRate("USD/CAD").then(rate=>{UCADValue=rate})}function fetchUCHFValue(){return fetchExchangeRate("USD/CHF").then(rate=>{UCHFValue=rate})}function fetchGUValue(){return fetchExchangeRate("GBP/USD").then(rate=>{GUValue=rate})}function fetchGJValue(){return fetchExchangeRate("GBP/JPY").then(rate=>{GJValue=rate})}function clearForm(){document.getElementById("entryPrice").value="";document.getElementById("exitPrice").value="";document.getElementById("targetPrice").value="";document.getElementById("equityBalance").value="";document.getElementById("lots").value="";document.getElementById("riskOutput").textContent="";document.getElementById("rewardOutput").textContent="";document.getElementById("riskRewardOutput").textContent="";document.getElementById("lossOutput").textContent="";document.getElementById("profitOutput").textContent="";updateChart(0,0);updateProfitLossChart(0,0)}function setCurrency(currency){selectedCurrency=currency;const decimalStep=getDecimalStepForCurrency(currency);document.getElementById("entryPrice").step=decimalStep;document.getElementById("exitPrice").step=decimalStep;document.getElementById("targetPrice").step=decimalStep;document.getElementById("selectedCurrency").textContent=`Calculating for: ${currency}`;document.querySelectorAll(".currency-button").forEach(button=>{button.classList.remove("bg-blue-700","bg-yellow-700");button.classList.add("bg-blue-500","bg-yellow-500")});const selectedButton=document.getElementById(currency);selectedButton.classList.remove("bg-blue-500","bg-yellow-500");selectedButton.classList.add(currency==="GOLD"?"bg-yellow-700":"bg-blue-700");let fetchPromises=[];if(currency==="USDJPY"){fetchPromises.push(fetchUJValue())}else if(currency==="USDCAD"){fetchPromises.push(fetchUCADValue())}else if(currency==="USDCHF"){fetchPromises.push(fetchUCHFValue())}else if(currency==="GBPJPY"){fetchPromises.push(fetchGUValue());fetchPromises.push(fetchGJValue())}Promise.all(fetchPromises).then(()=>{clearForm()})}function initializeChart(){const ctx=document.getElementById("riskRewardChart").getContext("2d");chart=new Chart(ctx,{type:"doughnut",data:{labels:["Risk","Reward"],datasets:[{label:"Percentage",data:[0,0],backgroundColor:["#f87171","#34d399"]}]},options:{responsive:!0,plugins:{tooltip:{callbacks:{label:function(context){let label=context.label||"";if(label){label+=": "}if(context.parsed!==null){label+=context.parsed.toFixed(2)+" %"}return label}}}}}})}function initializeProfitLossChart(){const ctx=document.getElementById("profitLossChart").getContext("2d");profitLossChart=new Chart(ctx,{type:"doughnut",data:{labels:["Profit","Loss"],datasets:[{label:"Percentage",data:[0,0],backgroundColor:["#34d399","#f87171"]}]},options:{responsive:!0,plugins:{tooltip:{callbacks:{label:function(context){let label=context.label||"";if(label){label+=": "}if(context.parsed!==null){label+=context.parsed.toFixed(0)+" USD"}return label}}}}}})}function updateChart(risk,reward){chart.data.datasets[0].data=[risk,reward];chart.update()}function updateProfitLossChart(profit,loss){profitLossChart.data.datasets[0].data=[profit,loss];profitLossChart.update()}function calculateRisk(){const EPr=parseFloat(document.getElementById("entryPrice").value);const ExP=parseFloat(document.getElementById("exitPrice").value);const TrP=parseFloat(document.getElementById("targetPrice").value);const EqBal=parseFloat(document.getElementById("equityBalance").value);const Lts=parseFloat(document.getElementById("lots").value);if(!EPr||!ExP||!TrP||!EqBal||!Lts||isNaN(EPr)||isNaN(ExP)||isNaN(TrP)||isNaN(EqBal)||isNaN(Lts)){alert("Please fill out all fields correctly.");return}let units=Lts*1e5;if(selectedCurrency==="BTC"){units=Lts*1e5/1e5}else if(selectedCurrency==="GOLD"){units=Lts*1e5/1e3}let riskRewardRatio,riskPercentage,rewardPercentage,estimatedLoss,estimatedProfit;let riskValue=0;let rewardValue=0;let profitValue=0;let lossValue=0;if(selectedCurrency==="USDCAD"&&UCADValue){const BRF=(EPr-ExP)*units/UCADValue;const BPF=(TrP-EPr)*units/UCADValue;const SRF=(ExP-EPr)*units/UCADValue;const SPF=(EPr-TrP)*units/UCADValue;if(TrP>EPr&&EPr>ExP){const buyRiskPercentage=BRF/EqBal*100;const buyRewardPercentage=BPF/EqBal*100;riskRewardRatio=`${buyRiskPercentage.toFixed(2)} : ${buyRewardPercentage.toFixed(2)}`;riskPercentage=buyRiskPercentage;rewardPercentage=buyRewardPercentage;riskValue=buyRiskPercentage;rewardValue=buyRewardPercentage;profitValue=BPF;lossValue=-BRF;estimatedLoss=-BRF;estimatedProfit=BPF}else if(ExP>EPr&&EPr>TrP){const sellRiskPercentage=SRF/EqBal*100;const sellRewardPercentage=SPF/EqBal*100;riskRewardRatio=`${sellRiskPercentage.toFixed(2)} : ${sellRewardPercentage.toFixed(2)}`;riskPercentage=sellRiskPercentage;rewardPercentage=sellRewardPercentage;riskValue=sellRiskPercentage;rewardValue=sellRewardPercentage;profitValue=SPF;lossValue=-SRF;estimatedLoss=-SRF;estimatedProfit=SPF}}else if(selectedCurrency==="USDJPY"&&UJValue){const BRF=(EPr-ExP)*units/UJValue;const BPF=(TrP-EPr)*units/UJValue;const SRF=(ExP-EPr)*units/UJValue;const SPF=(EPr-TrP)*units/UJValue;if(TrP>EPr&&EPr>ExP){const buyRiskPercentage=BRF/EqBal*100;const buyRewardPercentage=BPF/EqBal*100;riskRewardRatio=`${buyRiskPercentage.toFixed(2)} : ${buyRewardPercentage.toFixed(2)}`;riskPercentage=buyRiskPercentage;rewardPercentage=buyRewardPercentage;riskValue=buyRiskPercentage;rewardValue=buyRewardPercentage;profitValue=BPF;lossValue=-BRF;estimatedLoss=-BRF;estimatedProfit=BPF}else if(ExP>EPr&&EPr>TrP){const sellRiskPercentage=SRF/EqBal*100;const sellRewardPercentage=SPF/EqBal*100;riskRewardRatio=`${sellRiskPercentage.toFixed(2)} : ${sellRewardPercentage.toFixed(2)}`;riskPercentage=sellRiskPercentage;rewardPercentage=sellRewardPercentage;riskValue=sellRiskPercentage;rewardValue=sellRewardPercentage;profitValue=SPF;lossValue=-SRF;estimatedLoss=-SRF;estimatedProfit=SPF}}else if(selectedCurrency==="USDCHF"&&UCHFValue){const BRF=(EPr-ExP)*units/UCHFValue;const BPF=(TrP-EPr)*units/UCHFValue;const SRF=(ExP-EPr)*units/UCHFValue;const SPF=(EPr-TrP)*units/UCHFValue;if(TrP>EPr&&EPr>ExP){const buyRiskPercentage=BRF/EqBal*100;const buyRewardPercentage=BPF/EqBal*100;riskRewardRatio=`${buyRiskPercentage.toFixed(2)} : ${buyRewardPercentage.toFixed(2)}`;riskPercentage=buyRiskPercentage;rewardPercentage=buyRewardPercentage;riskValue=buyRiskPercentage;rewardValue=buyRewardPercentage;profitValue=BPF;lossValue=-BRF;estimatedLoss=-BRF;estimatedProfit=BPF}else if(ExP>EPr&&EPr>TrP){const sellRiskPercentage=SRF/EqBal*100;const sellRewardPercentage=SPF/EqBal*100;riskRewardRatio=`${sellRiskPercentage.toFixed(2)} : ${sellRewardPercentage.toFixed(2)}`;riskPercentage=sellRiskPercentage;rewardPercentage=sellRewardPercentage;riskValue=sellRiskPercentage;rewardValue=sellRewardPercentage;profitValue=SPF;lossValue=-SRF;estimatedLoss=-SRF;estimatedProfit=SPF}}else if(selectedCurrency==="GBPJPY"&&GUValue&&GJValue){const BRF=(EPr-ExP)*units*GUValue/GJValue;const BPF=(TrP-EPr)*units*GUValue/GJValue;const SRF=(ExP-EPr)*units*GUValue/GJValue;const SPF=(EPr-TrP)*units*GUValue/GJValue;if(TrP>EPr&&EPr>ExP){const buyRiskPercentage=BRF/EqBal*100;const buyRewardPercentage=BPF/EqBal*100;riskRewardRatio=`${buyRiskPercentage.toFixed(2)} : ${buyRewardPercentage.toFixed(2)}`;riskPercentage=buyRiskPercentage;rewardPercentage=buyRewardPercentage;riskValue=buyRiskPercentage;rewardValue=buyRewardPercentage;profitValue=BPF;lossValue=-BRF;estimatedLoss=-BRF;estimatedProfit=BPF}else if(ExP>EPr&&EPr>TrP){const sellRiskPercentage=SRF/EqBal*100;const sellRewardPercentage=SPF/EqBal*100;riskRewardRatio=`${sellRiskPercentage.toFixed(2)} : ${sellRewardPercentage.toFixed(2)}`;riskPercentage=sellRiskPercentage;rewardPercentage=sellRewardPercentage;riskValue=sellRiskPercentage;rewardValue=sellRewardPercentage;profitValue=SPF;lossValue=-SRF;estimatedLoss=-SRF;estimatedProfit=SPF}}else if(TrP>EPr&&EPr>ExP){const BRF=(EPr-ExP)*units;const BPF=(TrP-EPr)*units;if(BRF>0&&BPF>0){const buyRiskPercentage=BRF/EqBal*100;const buyRewardPercentage=BPF/EqBal*100;riskRewardRatio=`${buyRiskPercentage.toFixed(2)} : ${buyRewardPercentage.toFixed(2)}`;riskPercentage=buyRiskPercentage;rewardPercentage=buyRewardPercentage;riskValue=buyRiskPercentage;rewardValue=buyRewardPercentage;profitValue=BPF;lossValue=-BRF;estimatedLoss=-BRF;estimatedProfit=BPF}}else if(TrP<EPr&&EPr<ExP){const SRF=(ExP-EPr)*units;const SPF=(EPr-TrP)*units;if(SRF>0&&SPF>0){const sellRiskPercentage=SRF/EqBal*100;const sellRewardPercentage=SPF/EqBal*100;riskRewardRatio=`${sellRiskPercentage.toFixed(2)} : ${sellRewardPercentage.toFixed(2)}`;riskPercentage=sellRiskPercentage;rewardPercentage=sellRewardPercentage;riskValue=sellRiskPercentage;rewardValue=sellRewardPercentage;profitValue=SPF;lossValue=-SRF;estimatedLoss=-SRF;estimatedProfit=SPF}}document.getElementById("riskOutput").textContent=`Estimated Risk: ${riskPercentage.toFixed(2)}%`;document.getElementById("rewardOutput").textContent=`Estimated Reward: ${rewardPercentage.toFixed(2)}%`;document.getElementById("riskRewardOutput").textContent=`Risk/Reward Ratio: ${riskRewardRatio}`;document.getElementById("lossOutput").innerHTML=`Estimated Loss: <span class="text-red-500 font-bold">${estimatedLoss.toFixed(2)} USD</span>`;document.getElementById("profitOutput").innerHTML=`Estimated Profit: <span class="text-green-500 font-bold">${estimatedProfit.toFixed(2)} USD</span>`;const riskPercentageOfEquity=riskValue;const rewardPercentageOfEquity=rewardValue;updateChart(riskPercentageOfEquity,rewardPercentageOfEquity);updateProfitLossChart(profitValue,lossValue)}function getDecimalStepForCurrency(currency){switch(currency){case"AUDUSD":case"EURUSD":case"GBPUSD":case"NZDUSD":case"USDCAD":case"USDCHF":return"0.0001";case"USDJPY":case"GBPJPY":return"0.01";case"GOLD":return"0.01";case"BTC":return"0.1";default:return"0.01"}}document.querySelectorAll(".currency-button").forEach(button=>{button.addEventListener("click",()=>{const currency=button.id;setCurrency(currency)})});